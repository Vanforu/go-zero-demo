// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	article "main/services/article/internal/handler/article"
	comment "main/services/article/internal/handler/comment"
	upload "main/services/article/internal/handler/upload"
	"main/services/article/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/article/:id",
				Handler: article.GetArticleDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/article/create",
				Handler: article.CreateArticleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/article/delete",
				Handler: article.DeleteArticleHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/article/list",
				Handler: article.GetArticleListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/article/update",
				Handler: article.UpdateArticleHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/a1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/article/comment/:aid",
				Handler: comment.GetCommentByAidHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/comment/:pid",
				Handler: comment.GetCommentByPidHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/comment/create",
				Handler: comment.CreateCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/comment/delete",
				Handler: comment.DeleteCommentHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/a1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/upload/image",
				Handler: upload.UploadImageHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/upload/video",
				Handler: upload.UploadVideoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/a1"),
	)
}
